CREATE TABLE AgiSound (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Filename VARCHAR(20) NOT NULL,
  PRIMARY KEY(ID)
);

CREATE TABLE Module (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Name VARCHAR(20) NOT NULL,
  PRIMARY KEY(ID)
);

CREATE TABLE Grp (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Name INTEGER UNSIGNED NULL,
  PRIMARY KEY(ID)
);

CREATE TABLE People (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  extension VARCHAR(10) NOT NULL,
  pwd VARCHAR(10) NOT NULL,
  enable BOOL NOT NULL,
  context VARCHAR(20) NOT NULL,
  mail VARCHAR(50) NULL,
  PRIMARY KEY(ID)
);

CREATE TABLE WebInterface (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Name VARCHAR(20) NOT NULL,
  ScreenName VARCHAR(40) NOT NULL,
  LogIn BOOL NOT NULL,
  PRIMARY KEY(ID)
);

CREATE TABLE Iax (
  accountID INTEGER UNSIGNED NOT NULL,
  People_ID INTEGER UNSIGNED NOT NULL,
  context VARCHAR(20) NOT NULL,
  options... INTEGER UNSIGNED NULL,
  PRIMARY KEY(accountID),
  INDEX Iax_FKIndex1(People_ID),
  FOREIGN KEY(People_ID)
    REFERENCES People(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Module_Action (
  Module_ID INTEGER UNSIGNED NOT NULL,
  Action_ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Name VARCHAR(20) NULL,
  Description TEXT NULL,
  PRIMARY KEY(Module_ID, Action_ID),
  INDEX Module_Action_FKIndex1(Module_ID),
  FOREIGN KEY(Module_ID)
    REFERENCES Module(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Sip (
  accountID INTEGER UNSIGNED NOT NULL,
  People_ID INTEGER UNSIGNED NOT NULL,
  context VARCHAR(20) NOT NULL,
  options... INTEGER UNSIGNED NULL,
  PRIMARY KEY(accountID),
  INDEX Sip_FKIndex1(People_ID),
  FOREIGN KEY(People_ID)
    REFERENCES People(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Account_Priority (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  People_ID INTEGER UNSIGNED NOT NULL,
  Account_ID INTEGER UNSIGNED NOT NULL,
  Account_Type INTEGER UNSIGNED NOT NULL,
  Priority INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(ID),
  INDEX Account_Priority_FKIndex1(People_ID),
  FOREIGN KEY(People_ID)
    REFERENCES People(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE AgiSound_Set (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  AgiSound_ID INTEGER UNSIGNED NOT NULL,
  Priority INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(ID),
  INDEX AgiSound_Set_FKIndex1(AgiSound_ID),
  UNIQUE INDEX AgiSound_Set_Uniq1(Priority, AgiSound_ID),
  FOREIGN KEY(AgiSound_ID)
    REFERENCES AgiSound(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Alias (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  People_ID INTEGER UNSIGNED NOT NULL,
  context VARCHAR(20) NOT NULL,
  extension VARCHAR(10) NOT NULL,
  PRIMARY KEY(ID),
  INDEX Alias_FKIndex1(People_ID),
  FOREIGN KEY(People_ID)
    REFERENCES People(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE WebMenu (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Module_Action_ID INTEGER UNSIGNED NOT NULL,
  Module_ID INTEGER UNSIGNED NOT NULL,
  Parent INTEGER UNSIGNED NULL,
  WebInterface_ID INTEGER UNSIGNED NOT NULL,
  Name VARCHAR(20) NOT NULL,
  ScreenName VARCHAR(40) NOT NULL,
  Filename VARCHAR(20) NOT NULL,
  PHPAction VARCHAR(10) NOT NULL,
  PRIMARY KEY(ID),
  INDEX WebMenu_FKIndex2(Module_ID, Module_Action_ID),
  INDEX WebMenu_FKIndex3(WebInterface_ID),
  INDEX WebMenu_FKIndex3(Parent),
  FOREIGN KEY(Module_ID, Module_Action_ID)
    REFERENCES Module_Action(Module_ID, Action_ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(WebInterface_ID)
    REFERENCES WebInterface(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Parent)
    REFERENCES WebMenu(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Right (
  Grp_ID INTEGER UNSIGNED NOT NULL,
  Module_Action_ID INTEGER UNSIGNED NOT NULL,
  Module_ID INTEGER UNSIGNED NOT NULL,
  Value BOOL NOT NULL,
  PRIMARY KEY(Grp_ID, Module_Action_ID, Module_ID),
  INDEX Rights_FKIndex1(Grp_ID),
  INDEX Right_FKIndex2(Module_ID, Module_Action_ID),
  FOREIGN KEY(Grp_ID)
    REFERENCES Grp(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Module_ID, Module_Action_ID)
    REFERENCES Module_Action(Module_ID, Action_ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE AgiInterface (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Sound_Outtro INTEGER UNSIGNED NOT NULL,
  Sound_Intro INTEGER UNSIGNED NOT NULL,
  Name VARCHAR(20) NOT NULL,
  LogIn BOOL NOT NULL,
  PRIMARY KEY(ID),
  INDEX AgiInterface_FKIndex1(Sound_Intro),
  INDEX AgiInterface_FKIndex2(Sound_Outtro),
  FOREIGN KEY(Sound_Intro)
    REFERENCES AgiSound_Set(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Sound_Outtro)
    REFERENCES AgiSound_Set(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE Grp_has_People (
  Grp_ID INTEGER UNSIGNED NOT NULL,
  People_ID INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(Grp_ID, People_ID),
  INDEX Groups_has_Peoples_FKIndex1(Grp_ID),
  INDEX Groups_has_Peoples_FKIndex2(People_ID),
  FOREIGN KEY(Grp_ID)
    REFERENCES Grp(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(People_ID)
    REFERENCES People(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE AgiMenuis (
  ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  Sound_After INTEGER UNSIGNED NULL,
  Sound_Announce INTEGER UNSIGNED NULL,
  Sound_Before INTEGER UNSIGNED NULL,
  Module_Action_ID INTEGER UNSIGNED NULL,
  Module_ID INTEGER UNSIGNED NULL,
  Parent INTEGER UNSIGNED NULL,
  AgiInterface_ID INTEGER UNSIGNED NOT NULL,
  Name VARCHAR(20) NOT NULL,
  Filename VARCHAR(20) NOT NULL,
  PHPAction VARCHAR(10) NOT NULL,
  AccessMask VARCHAR(10) NOT NULL,
  PRIMARY KEY(ID),
  INDEX AgiMenu_FKIndex2(Parent),
  INDEX AgiMenu_FKIndex2(AgiInterface_ID),
  INDEX AgiMenu_FKIndex3(Module_ID, Module_Action_ID),
  INDEX AgiMenu_FKIndex4(Sound_Announce),
  INDEX AgiMenu_FKIndex5(Sound_Before),
  INDEX AgiMenuis_FKIndex6(Sound_After),
  FOREIGN KEY(Parent)
    REFERENCES AgiMenuis(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(AgiInterface_ID)
    REFERENCES AgiInterface(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Module_ID, Module_Action_ID)
    REFERENCES Module_Action(Module_ID, Action_ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Sound_Announce)
    REFERENCES AgiSound_Set(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Sound_Before)
    REFERENCES AgiSound_Set(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Sound_After)
    REFERENCES AgiSound_Set(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);


